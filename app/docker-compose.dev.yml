version: '3.9'
services:
  frontend:
    platform: linux/amd64
    build: ./frontend
    ports:
      - 3000:3000
    working_dir: /app-frontend
    depends_on:
      backend:
#         condition: service_healthy
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    container_name: app_backend
    platform: linux/amd64
    build: ./backend
    ports:
      - 3001:3001
    working_dir: /app-backend
    command: dev
    volumes: 
      - ./backend:/app-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - APP_PORT=3000
      - JWT_SECRET=jwt_secret
      # Os dados abaixo se referem ao container `db`
      - PGDATABASE=railway
      - PGHOST=containers-us-west-176.railway.app
      - PGPASSWORD=uUuM13aWPFjDu1BoOjvW
      - PGPORT=6367
      - PGUSER=postgres
#     healthcheck:
#       test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
#       timeout: 10s
#       retries: 5
  db:
    image: postgres
    container_name: db
    platform: linux/amd64
    ports:
      - 8080:8080
    environment:
      - PGDATABASE=railway
      - PGHOST=containers-us-west-176.railway.app
      - PGPASSWORD=uUuM13aWPFjDu1BoOjvW
      - PGPORT=8080
      - PGUSER=postgres
    restart: 'always'
